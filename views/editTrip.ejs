<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Trip</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
            color: #333;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .navbar {
            background-color: #000;
            color: #fff;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .navbar a {
            color: #fff;
            text-decoration: none;
            font-weight: bold;
        }

        .container {
            background-color: #f0f2f5;
            padding: 40px;
            border-radius: 8px;
            max-width: 1000px;
            width: 70%;
            margin: 40px auto;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        select, input {
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 16px;
            width: 100%;
        }

        .destination-item {
            margin-bottom: 15px;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #fff;
        }

        .destination-item button {
            margin-top: 10px;
            background-color: #dc3545;
            color: #fff;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        .destination-item button:hover {
            background-color: #c82333;
        }

        button {
            padding: 15px;
            background-color: #007bff;
            color: #fff;
            font-size: 16px;
            font-weight: bold;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
            align-self: center;
            width: 50%;
        }

        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <header class="navbar">
        <div class="logo">
            <a href="/">Travel Planner</a>
        </div>
        <nav>
            <a href="/trips/view">View Trips</a> |
            <a href="/trips/add">Add Trip</a> |
            <a href="/auth/logout">Logout</a>
        </nav>
    </header>

    <div class="container">
        <h1>Edit Trip</h1>
        <form id="editTripForm">
            <div>
                <label for="tripName">Trip Name:</label>
                <input type="text" id="tripName" name="tripName" value="<%= trip.tripName %>" required>
            </div>

            <h2>Destinations</h2>
            <div id="destinationList">
                <% trip.destinations.forEach((destination, index) => { %>
                    <div class="destination-item" data-index="<%= index %>">
                        <label for="continent-<%= index %>">Continent:</label>
                        <select id="continent-<%= index %>" class="continent-dropdown" required>
                            <option value="">Select Continent</option>
                        </select>

                        <label for="region-<%= index %>">Region:</label>
                        <select id="region-<%= index %>" class="region-dropdown" required>
                            <option value="">Select Region</option>
                        </select>

                        <label for="country-<%= index %>">Country:</label>
                        <select id="country-<%= index %>" class="country-dropdown" required>
                            <option value="">Select Country</option>
                        </select>

                        <label for="city-<%= index %>">City:</label>
                        <input type="text" id="city-<%= index %>" value="<%= destination.city %>" required>

                        <label for="startDate-<%= index %>">Start Date:</label>
                        <input type="date" id="startDate-<%= index %>" value="<%= destination.startDate.toISOString().split('T')[0] %>" required>

                        <label for="endDate-<%= index %>">End Date:</label>
                        <input type="date" id="endDate-<%= index %>" value="<%= destination.endDate.toISOString().split('T')[0] %>" required>

                        <button type="button" onclick="removeDestination(<%= index %>)">Remove</button>
                    </div>
                <% }); %>
            </div>

            <button type="submit">Save Changes</button>
        </form>
    </div>

    <script>
        async function loadLocations() {
            const response = await fetch('/data/locations.json');
            return response.json();
        }

        function populateDropdowns(locations, destination, index) {
            const continentSelect = document.getElementById(`continent-${index}`);
            const regionSelect = document.getElementById(`region-${index}`);
            const countrySelect = document.getElementById(`country-${index}`);

            // Populate continents
            Object.keys(locations).forEach(continent => {
                const option = document.createElement('option');
                option.value = continent;
                option.textContent = continent;
                continentSelect.appendChild(option);
            });

            // Set initial continent
            continentSelect.value = destination.continent;
            continentSelect.dispatchEvent(new Event('change'));

            // Populate regions based on selected continent
            continentSelect.addEventListener('change', () => {
                regionSelect.innerHTML = '<option value="">Select Region</option>';
                countrySelect.innerHTML = '<option value="">Select Country</option>';

                const selectedContinent = continentSelect.value;
                if (locations[selectedContinent]) {
                    Object.keys(locations[selectedContinent]).forEach(region => {
                        const option = document.createElement('option');
                        option.value = region;
                        option.textContent = region;
                        regionSelect.appendChild(option);
                    });
                }
            });

            // Populate countries based on selected region
            regionSelect.addEventListener('change', () => {
                countrySelect.innerHTML = '<option value="">Select Country</option>';

                const selectedContinent = continentSelect.value;
                const selectedRegion = regionSelect.value;
                if (locations[selectedContinent] && locations[selectedContinent][selectedRegion]) {
                    locations[selectedContinent][selectedRegion].forEach(country => {
                        const option = document.createElement('option');
                        option.value = country.name;
                        option.textContent = country.name;
                        countrySelect.appendChild(option);
                    });
                }
            });

            // Set initial region and country
            regionSelect.value = destination.region;
            regionSelect.dispatchEvent(new Event('change'));
            setTimeout(() => (countrySelect.value = destination.country), 500);
        }

        document.addEventListener('DOMContentLoaded', async () => {
            const locations = await loadLocations();
            document.querySelectorAll('.destination-item').forEach((item, index) => {
                const destination = {
                    continent: item.querySelector(`#continent-${index}`).dataset.value,
                    region: item.querySelector(`#region-${index}`).dataset.value,
                    country: item.querySelector(`#country-${index}`).dataset.value,
                };
                populateDropdowns(locations, destination, index);
            });
        });

        function removeDestination(index) {
            document.querySelector(`.destination-item[data-index="${index}"]`).remove();
        }
    </script>
</body>
</html>
