<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trip Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <style>
        #map {
            height: 600px; /* Adjust the height as needed */
            width: 100%;
        }
    </style>
</head>
<body>
    <h1>Map of Your Trips</h1>
    <div id="map"></div>

    <script>
        // Initialize the map and set its view to a default location
        const map = L.map('map').setView([48.8566, 2.3522], 5); // Default center at Paris

        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Wait for the DOM to be fully loaded before executing
        document.addEventListener('DOMContentLoaded', function() {
            // Get the token from localStorage
            const token = localStorage.getItem('token');
    
            if (!token) {
                console.error('No token found. Please log in.');
                alert('No token found. Please log in to view the map.');
                return;
            }
    
            console.log('Using token:', token); // Add this line to check token retrieval
    
            // Fetch trips data with the Authorization header
            fetch('/trips/map', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch trips data');
                }
                return response.json();
            })
            .then(data => {
                if (data.trips && data.trips.length > 0) {
                    addMarkers(data.trips);
                } else {
                    console.error('No trips data available');
                    alert('No trips available to display on the map.');
                }
            })
            .catch(error => {
                console.error('Error fetching trips data:', error);
                alert('Failed to load trips data. Please try again.');
            });
        });
    
        // Function to add markers from trip data
        function addMarkers(trips) {
            trips.forEach(trip => {
                if (trip.coordinates && trip.coordinates.latitude && trip.coordinates.longitude) {
                    const marker = L.marker([trip.coordinates.latitude, trip.coordinates.longitude])
                        .addTo(map)
                        .bindPopup(
                            `<b>${trip.destination}</b><br>
                             From: ${new Date(trip.startDate).toLocaleDateString()}<br>
                             To: ${new Date(trip.endDate).toLocaleDateString()}`
                        );

                    // Optional: Open popup on load for each marker
                    marker.on('click', function() {
                        marker.openPopup();
                    });
                } else {
                    console.error('Invalid coordinates for trip:', trip);
                }
            });
        }
    </script>
</body>
</html>
